# Container used to run salt tests focusing on SUSE Manager use cases
#
# NAME                  toaster-sles12sp4-products-testing
# VERSION               0



FROM registry.mgr.suse.de/sles12sp4
MAINTAINER Mihai Dinca: "mdinca@suse.com"


ENV LC_ALL en_US.UTF-8
COPY Makefile /root/Makefile
COPY get-pip.py /root/get-pip.py
COPY wheels/ /root/wheels/
COPY docker-requirements.txt /root/
COPY docker-requirements-rhel8.txt /root/
COPY docker-requirements-common.txt /root/
COPY py26-docker-requirements.txt /root/
COPY bin/lastchangelog /root/bin/lastchangelog


COPY bin/install_salt.sh /root/bin/install_salt.sh
ARG CACHE_DATE=nocache
# Use your credentials for the 'nu.novell' domain within the URL, in case required
RUN zypper -n ar -f http://nu.novell.com/SUSE/Products/SLE-SERVER/12-SP4/x86_64/product/ "SLES 12 SP4 Pool"
RUN zypper -n ar -f http://nu.novell.com/SUSE/Updates/SLE-SERVER/12-SP4/x86_64/update/ "SLES 12 SP4 Updates"
RUN zypper -n ar -f http://nu.novell.com/SUSE/Products/SLE-SDK/12-SP4/x86_64/product/ "SLE-SDK 12 SP4 Pool"
RUN zypper -n ar -f http://nu.novell.com/SUSE/Updates/SLE-SDK/12-SP4/x86_64/update/ "SLE-SDK 12 SP4 Updates"
RUN zypper -n ar -f http://nu.novell.com/SUSE/Products/SLE-Manager-Tools/12/x86_64/product/ "SLE-Manager-Tools 12 Pool"
RUN zypper -n ar -f http://nu.novell.com/SUSE/Updates/SLE-Manager-Tools/12/x86_64/update/ "SLE-Manager-Tools 12 Updates"



RUN zypper -n ar -f http://download.opensuse.org/repositories/systemsmanagement:/saltstack:/testing:/testpackages/SLE_12_SP4/ "testpackages"

RUN zypper -n ar -f http://download.opensuse.org/repositories/systemsmanagement:/saltstack:/products:/testing/SLE_12_SP4/ "salt"
RUN zypper -n mr -p 1 salt

RUN zypper --non-interactive --gpg-auto-import-keys ref
RUN zypper -nq in curl vim vim-data
RUN zypper -n in --no-recommends python python-devel python-xml


RUN python /root/get-pip.py --no-index /root/wheels/pip-9.0.3-py2.py3-none-any.whl /root/wheels/setuptools-33.1.1-py2.py3-none-any.whl -f /root/wheels/



RUN zypper --non-interactive --gpg-auto-import-keys ref
RUN zypper -n in rpm-build

# make sure the package repository is up to date
RUN zypper --non-interactive --gpg-auto-import-keys ref
RUN zypper -n in --no-recommends make bind-utils gcc-c++ openssh rsync

RUN pip install --no-index -f /root/wheels/ -r /root/docker-requirements.txt




RUN /root/bin/install_salt.sh

RUN zypper -n rm container-suseconnect
RUN zypper -n in netcat-openbsd timezone # spacewalk-oscap openscap-content vim vim-data
RUN pip install -U --no-deps --no-index -f /root/wheels /root/wheels/salt-testing-2018.1.16.tar.gz




RUN pip install --no-index /root/wheels/pytest_salt-2018.2.2-py2.py3-none-any.whl -f /root/wheels/
RUN zypper --non-interactive in py26-compat-salt py26-compat-tornado py26-compat-msgpack-python

# RUN pip install moto

RUN pip install --no-index --upgrade --force -f /root/wheels /root/wheels/psutil-5.4.5.tar.gz  # overwrite old psutil using pip
RUN pip install --no-index --force -f /root/wheels /root/wheels/saltrepoinspect-1.0.tar.gz



RUN pip --trusted-host pypi.python.org install rsa==3.4.2

RUN pip --trusted-host pypi.python.org install pytest==4.6.5 pytest-helpers-namespace pytest-timeout mock timelib boto kubernetes==2.0.0 apache-libcloud unittest2 pytest-salt==2020.1.27 gitpython jmespath


ENTRYPOINT ["make", "-f", "/root/Makefile", "-C", "/salt-toaster"]
CMD ["default"]
